{"version":3,"sources":["Joke.js","JokeList.js","App.js","serviceWorker.js","index.js"],"names":["StyledJoke","styled","div","JokeButtons","voteBorderStyles","css","props","votes","JokeVotes","span","JokeText","JokeSmiley","arrowStyles","UpArrow","FontAwesomeIcon","attrs","icon","faArrowUp","DownArrow","faArrowDown","Smiley","i","Joke","upVote","bind","downVote","getEmoji","evt","this","assessVote","id","joke","onClick","className","Component","boxShadow","StyledJokeList","Sidebar","SidebarTitle","h1","SidebarImg","img","NewJokesBtn","button","Jokes","Loader","LoaderTitle","Spinner","faLaugh","size","JokeList","state","jokes","loading","getJokes","fetchJokes","storedJokes","JSON","parse","localStorage","getItem","setState","prevProps","prevState","setItem","stringify","newJokes","length","numJokesToGet","newJoke","axios","get","headers","Accept","res","data","checkJoke","push","st","alert","some","jokeId","vote","votedJokes","map","spin","sort","a","b","key","src","alt","disabled","defaultProps","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.54641a31.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport styled, { css } from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowUp, faArrowDown } from '@fortawesome/free-solid-svg-icons';\n\nconst StyledJoke = styled.div`\n    display: flex;\n    border-bottom: 2px solid #eeeeee;\n    align-items: center;\n    justify-content: center;\n    font-weight: 400;\n    padding: 1.5rem;\n`;\nconst JokeButtons = styled.div`\n    display: flex;\n    margin-right: 1rem;\n    align-items: center;\n    justify-content: center;\n    width: 15%;\n`;\nconst voteBorderStyles = css`\n    border-color: ${(props) =>\n        props.votes >= 15\n            ? `#4CAF50`\n            : props.votes >= 12\n              ? `#8BC34A`\n              : props.votes >= 9\n                ? `#CDDC39`\n                : props.votes >= 6 ? `#FFEB3B` : props.votes >= 3 ? `#FFC107` : props.votes >= 0 ? `#FF9800` : `#F44336`};\n    border-style: solid;\n    border-width: 3px;\n`;\n\nconst JokeVotes = styled.span`\n    width: 50px;\n    height: 50px;\n    line-height: 50px;\n    border-radius: 50%;\n    text-align: center;\n    font-size: 20px;\n    font-weight: 300;\n    box-shadow: 0 10px 38px rgba(0, 0, 0, 0.2), 0 10px 12px rgba(0, 0, 0, 0.1);\n    ${voteBorderStyles};\n`;\nconst JokeText = styled.div`\n    width: 75%;\n    font-size: 1.2rem;\n`;\nconst JokeSmiley = styled.div`\n    font-size: 3rem;\n    margin-left: auto;\n    border-radius: 50%;\n    box-shadow: 0 10px 38px rgba(0, 0, 0, 0.2), 0 10px 12px rgba(0, 0, 0, 0.1);\n`;\nconst arrowStyles = css`\n    color: #afbdc5;\n    font-size: 1.5em;\n    margin: 10px;\n    cursor: pointer;\n`;\nconst UpArrow = styled(FontAwesomeIcon).attrs((props) => ({ icon: faArrowUp }))`\n${arrowStyles}\n`;\nconst DownArrow = styled(FontAwesomeIcon).attrs((props) => ({ icon: faArrowDown }))`\n${arrowStyles}\n`;\n\nconst Smiley = styled.i``;\n\nexport default class Joke extends Component {\n    constructor(props) {\n        super(props);\n        this.upVote = this.upVote.bind(this);\n        this.downVote = this.downVote.bind(this);\n        this.getEmoji = this.getEmoji.bind(this);\n    }\n\n    upVote(evt) {\n        this.props.assessVote(this.props.id, 1);\n    }\n\n    downVote(evt) {\n        this.props.assessVote(this.props.id, -1);\n    }\n    getEmoji() {\n        return this.props.votes >= 15\n            ? `em em-rolling_on_the_floor_laughing`\n            : this.props.votes >= 12\n              ? `em em-laughing`\n              : this.props.votes >= 9\n                ? `em em-smiley`\n                : this.props.votes >= 6\n                  ? `em em-slightly_smiling_face`\n                  : this.props.votes >= 3 ? `em em-neutral_face` : this.props.votes >= 0 ? `em em-confused` : `em em-angry`;\n    }\n\n    render() {\n        const { votes, joke } = this.props;\n        return (\n            <StyledJoke>\n                <JokeButtons>\n                    <UpArrow onClick={this.upVote} />\n                    <JokeVotes votes={votes}>{votes} </JokeVotes>\n                    <DownArrow onClick={this.downVote} />\n                </JokeButtons>\n                <JokeText>{joke}</JokeText>\n                <JokeSmiley>\n                    <Smiley className={this.getEmoji()} />\n                </JokeSmiley>\n            </StyledJoke>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Joke from './Joke';\nimport styled, { css } from 'styled-components';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLaugh } from '@fortawesome/free-solid-svg-icons';\n\nconst boxShadow = css`box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.1);`;\n\nconst StyledJokeList = styled.div`\n    height: 80%;\n    width: 80%;\n    display: flex;\n    flex-direction: row;\n`;\nconst Sidebar = styled.div`\n    background: #9575cd;\n    width: 30%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n    box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.1), inset 0 0 25px #7e57c2;\n    z-index: 2;\n`;\nconst SidebarTitle = styled.h1`\n    margin: 2rem;\n    font-size: 4rem;\n    color: white;\n    font-weight: 300;\n    letter-spacing: 0.6rem;\n\n    span {\n        font-weight: 700;\n        letter-spacing: 0;\n    }\n`;\nconst SidebarImg = styled.img`\n    width: 50%;\n    border: 0.5rem solid #9575cd;\n    border-radius: 50%;\n    ${boxShadow};\n`;\nconst NewJokesBtn = styled.button`\n    font-size: 2rem;\n    height: 6rem;\n    width: 50%;\n    border-radius: 2rem;\n    padding: 1rem 2rem;\n    color: white;\n    font-weight: 700;\n    margin: 2rem;\n    border: none;\n    cursor: pointer;\n    letter-spacing: 0.2rem;\n    word-spacing: 0.5rem;\n    outline: none;\n    background: linear-gradient(135deg, #b3e5fc 50%, #f06292 50%);\n    transition: 0.8s cubic-bezier(0.2, 1, 0.2, 1);\n    ${boxShadow};\n\n    &:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.25);\n    }\n`;\nconst Jokes = styled.div`\n    background: white;\n    height: 90%;\n    align-self: center;\n    width: 70%;\n    overflow: auto;\n    ${boxShadow};\n`;\n\nconst Loader = styled.div`\n    color: white;\n    text-align: center;\n`;\n\nconst LoaderTitle = styled(SidebarTitle)``;\n\nconst Spinner = styled(FontAwesomeIcon).attrs((props) => ({ icon: faLaugh, size: '8x' }))`\n\n`;\n\nexport default class JokeList extends Component {\n    static defaultProps = {\n        numJokesToGet: 10\n    };\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            jokes: [],\n            loading: false\n        };\n        this.getJokes = this.getJokes.bind(this);\n        this.assessVote = this.assessVote.bind(this);\n        this.fetchJokes = this.fetchJokes.bind(this);\n    }\n\n    componentDidMount() {\n        const storedJokes = JSON.parse(localStorage.getItem('jokes'));\n        if (storedJokes) {\n            this.setState({ jokes: storedJokes });\n        } else this.fetchJokes();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        localStorage.setItem('jokes', JSON.stringify(this.state.jokes));\n    }\n\n    fetchJokes() {\n        this.setState({ loading: true }, this.getJokes);\n    }\n\n    async getJokes() {\n        try {\n            let newJokes = [];\n            while (newJokes.length < this.props.numJokesToGet) {\n                let newJoke = {};\n                do {\n                    const res = await axios.get('https://icanhazdadjoke.com/', { headers: { Accept: 'application/json' } });\n\n                    newJoke = {\n                        id: res.data.id,\n                        joke: res.data.joke,\n                        votes: 0\n                    };\n                } while (this.checkJoke(newJokes, newJoke));\n                newJokes.push(newJoke);\n            }\n            this.setState((st) => ({ jokes: [ ...st.jokes, ...newJokes ], loading: false }));\n        } catch (e) {\n            alert(e);\n        }\n    }\n\n    checkJoke(jokes, newJoke) {\n        return jokes.some((joke) => joke.id === newJoke.id) || this.state.jokes.some((joke) => joke.id === newJoke.id);\n    }\n\n    assessVote(jokeId, vote) {\n        const votedJokes = this.state.jokes.map((joke) => {\n            if (joke.id === jokeId) {\n                return { ...joke, votes: joke.votes + vote };\n            }\n            return joke;\n        });\n        this.setState({ jokes: votedJokes });\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <Loader>\n                    <Spinner spin />\n                    <LoaderTitle>Loading...</LoaderTitle>\n                </Loader>\n            );\n        }\n        const jokes = this.state.jokes\n            .sort((a, b) => b.votes - a.votes)\n            .map((joke) => <Joke key={joke.id} id={joke.id} joke={joke.joke} votes={joke.votes} assessVote={this.assessVote} />);\n        return (\n            <StyledJokeList>\n                <Sidebar>\n                    <SidebarTitle>\n                        <span>Dad</span> Jokes\n                    </SidebarTitle>\n                    <SidebarImg\n                        src='https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg'\n                        alt='Crying while laughing emoji'\n                    />\n                    <NewJokesBtn onClick={this.fetchJokes} disabled={this.state.loading}>\n                        Fetch Jokes\n                    </NewJokesBtn>\n                </Sidebar>\n                <Jokes>{jokes}</Jokes>\n            </StyledJokeList>\n        );\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport JokeList from './JokeList';\n\nfunction App() {\n    return (\n        <div className='App'>\n            <JokeList />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}